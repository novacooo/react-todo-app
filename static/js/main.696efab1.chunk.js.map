{"version":3,"sources":["state/action-types/index.ts","state/action-creators/index.ts","app-constants/index.ts","theme/dark/blueDark.ts","theme/dark/violetDark.ts","theme/dark/orangeDark.ts","theme/light/blueLight.ts","theme/light/violetLight.ts","theme/light/orangeLight.ts","theme/appThemes.ts","state/reducers/themeReducer.ts","state/reducers/index.ts","state/store.ts","theme/GlobalStyle.tsx","helpers/toggleTransitionClass.ts","templates/MainTemplate.tsx","hooks/useThemeDetector.ts","views/HomePage.tsx","views/Root.tsx","index.tsx"],"names":["ActionType","switchTheme","theme","dispatch","type","SWITCH_THEME","payload","THEME_TRANSITION_CLASS","THEME_MODE_LIGHT","THEME_MODE_DARK","THEME_COLOR_BLUE","THEME_COLOR_ORANGE","THEME_COLOR_VIOLET","blueDark","mode","color","MAIN","MAIN_BORDER","MAIN_TRANSPARENT","MAIN_ITEMS","MAIN_PATTERN","BG_PRIMARY","BG_SECONDARY","BG_NOTE","BG_BADGE","BG_HOVER","BORDER","BORDER_HOVER","TEXT_PRIMARY","TEXT_SECONDARY","TEXT_BUTTON","ICON_PRIMARY","ICON_SECONDARY","GREEN","YELLOW","RED","violetDark","orangeDark","blueLight","violetLight","orangeLight","appThemes","initialState","light","blue","themeReducer","state","action","reducers","combineReducers","store","createStore","applyMiddleware","thunk","GlobalStyle","createGlobalStyle","toggleTransitionClass","htmlClassList","document","documentElement","classList","add","setTimeout","remove","withRouter","children","useSelector","isSystemDarkTheme","useState","window","matchMedia","matches","isDarkTheme","setIsDarkTheme","mqListener","e","useEffect","addEventListener","useThemeDetector","useDispatch","bindActionCreators","actionCreators","dark","Container","styled","div","Header","h1","Button","button","ButtonsContainer","ColorButton","bgColor","HomePage","changeThemeColor","onClick","Root","Helmet","rel","href","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.696efab1.chunk.js","sourcesContent":["export enum ActionType {\n  SWITCH_THEME = 'SWITCH_THEME',\n}\n","import { Dispatch } from 'redux';\nimport { IThemeType } from 'theme';\nimport { ActionType } from 'state/action-types';\nimport { ISwitchThemeAction } from 'state/actions';\n\nexport const switchTheme = (theme: IThemeType) => {\n  return (dispatch: Dispatch<ISwitchThemeAction>): void => {\n    dispatch({\n      type: ActionType.SWITCH_THEME,\n      payload: theme,\n    });\n  };\n};\n","export const THEME_TRANSITION_CLASS = 'transition';\nexport const THEME_TRANSITION_TIME = 200;\nexport const THEME_MODE_LIGHT = 'light';\nexport const THEME_MODE_DARK = 'dark';\nexport const THEME_COLOR_BLUE = 'blue';\nexport const THEME_COLOR_ORANGE = 'orange';\nexport const THEME_COLOR_VIOLET = 'violet';\n","import { THEME_COLOR_BLUE, THEME_MODE_DARK } from 'app-constants';\nimport { IThemeType } from 'theme';\n\nconst blueDark: IThemeType = {\n  mode: THEME_MODE_DARK,\n  color: THEME_COLOR_BLUE,\n\n  MAIN: 'hsl(216, 62%, 53%)',\n  MAIN_BORDER: 'hsl(216, 58%, 46%)',\n  MAIN_TRANSPARENT: 'hsla(216, 81%, 63%, 0.07)',\n  MAIN_ITEMS: 'hsl(0, 0%, 94%)',\n  MAIN_PATTERN: 'hsl(216, 21%, 10%)',\n\n  BG_PRIMARY: 'hsl(0, 0%, 7%)',\n  BG_SECONDARY: 'hsl(0, 0%, 9%)',\n  BG_NOTE: 'hsl(0, 0%, 10%)',\n  BG_BADGE: 'hsl(0, 0%, 13%)',\n  BG_HOVER: 'hsla(0, 0%, 0%, 0.1)',\n\n  BORDER: 'hsl(0, 0%, 13%)',\n  BORDER_HOVER: 'hsla(0, 0%, 0%, 0.1)',\n\n  TEXT_PRIMARY: 'hsl(0, 0%, 94%)',\n  TEXT_SECONDARY: 'hsl(0, 0%, 60%)',\n  TEXT_BUTTON: 'hsl(0, 0%, 94%)',\n\n  ICON_PRIMARY: 'hsl(0, 0%, 94%)',\n  ICON_SECONDARY: 'hsl(0, 0%, 40%)',\n\n  GREEN: 'hsl(126, 54%, 59%)',\n  YELLOW: 'hsl(40, 70%, 61%)',\n  RED: 'hsl(360, 90%, 61%)',\n};\n\nexport default blueDark;\n","import { THEME_COLOR_VIOLET, THEME_MODE_DARK } from 'app-constants';\nimport { IThemeType } from 'theme';\n\nconst violetDark: IThemeType = {\n  mode: THEME_MODE_DARK,\n  color: THEME_COLOR_VIOLET,\n\n  MAIN: 'hsl(274, 87%, 63%)',\n  MAIN_BORDER: 'hsl(277, 65%, 52%)',\n  MAIN_TRANSPARENT: 'hsla(274, 87%, 63%, 0.07)',\n  MAIN_ITEMS: 'hsl(0, 0%, 94%)',\n  MAIN_PATTERN: 'hsl(281, 24%, 11%)',\n\n  BG_PRIMARY: 'hsl(0, 0%, 7%)',\n  BG_SECONDARY: 'hsl(0, 0%, 9%)',\n  BG_NOTE: 'hsl(0, 0%, 10%)',\n  BG_BADGE: 'hsl(0, 0%, 13%)',\n  BG_HOVER: 'hsla(0, 0%, 0%, 0.1)',\n\n  BORDER: 'hsl(0, 0%, 13%)',\n  BORDER_HOVER: 'hsla(0, 0%, 0%, 0.1)',\n\n  TEXT_PRIMARY: 'hsl(0, 0%, 94%)',\n  TEXT_SECONDARY: 'hsl(0, 0%, 60%)',\n  TEXT_BUTTON: 'hsl(0, 0%, 94%)',\n\n  ICON_PRIMARY: 'hsl(0, 0%, 94%)',\n  ICON_SECONDARY: 'hsl(0, 0%, 40%)',\n\n  GREEN: 'hsl(126, 54%, 59%)',\n  YELLOW: 'hsl(40, 70%, 61%)',\n  RED: 'hsl(360, 90%, 61%)',\n};\n\nexport default violetDark;\n","import { THEME_COLOR_ORANGE, THEME_MODE_DARK } from 'app-constants';\nimport { IThemeType } from 'theme';\n\nconst orangeDark: IThemeType = {\n  mode: THEME_MODE_DARK,\n  color: THEME_COLOR_ORANGE,\n\n  MAIN: 'hsl(22, 91%, 60%)',\n  MAIN_BORDER: 'hsl(25, 70%, 43%)',\n  MAIN_TRANSPARENT: 'hsla(22, 91%, 60%, 0.07)',\n  MAIN_ITEMS: 'hsl(0, 0%, 94%)',\n  MAIN_PATTERN: 'hsl(29, 27%, 10%)',\n\n  BG_PRIMARY: 'hsl(0, 0%, 7%)',\n  BG_SECONDARY: 'hsl(0, 0%, 9%)',\n  BG_NOTE: 'hsl(0, 0%, 10%)',\n  BG_BADGE: 'hsl(0, 0%, 13%)',\n  BG_HOVER: 'hsla(0, 0%, 0%, 0.1)',\n\n  BORDER: 'hsl(0, 0%, 13%)',\n  BORDER_HOVER: 'hsla(0, 0%, 0%, 0.1)',\n\n  TEXT_PRIMARY: 'hsl(0, 0%, 94%)',\n  TEXT_SECONDARY: 'hsl(0, 0%, 60%)',\n  TEXT_BUTTON: 'hsl(0, 0%, 94%)',\n\n  ICON_PRIMARY: 'hsl(0, 0%, 94%)',\n  ICON_SECONDARY: 'hsl(0, 0%, 40%)',\n\n  GREEN: 'hsl(126, 54%, 59%)',\n  YELLOW: 'hsl(40, 70%, 61%)',\n  RED: 'hsl(360, 90%, 61%)',\n};\n\nexport default orangeDark;\n","import { THEME_COLOR_BLUE, THEME_MODE_LIGHT } from 'app-constants';\nimport { IThemeType } from 'theme';\n\nconst blueLight: IThemeType = {\n  mode: THEME_MODE_LIGHT,\n  color: THEME_COLOR_BLUE,\n\n  MAIN: 'hsl(227, 59%, 52%)',\n  MAIN_BORDER: 'hsl(227, 59%, 48%)',\n  MAIN_TRANSPARENT: 'hsla(227, 59%, 52%, 0.12)',\n  MAIN_ITEMS: 'hsl(0, 0%, 100%)',\n  MAIN_PATTERN: 'hsl(223, 75%, 93%)',\n\n  BG_PRIMARY: 'hsl(0, 0%, 100%)',\n  BG_SECONDARY: 'hsl(0, 0%, 96%)',\n  BG_NOTE: 'hsl(0, 0%, 100%)',\n  BG_BADGE: 'hsl(0, 0%, 90%)',\n  BG_HOVER: 'hsla(0, 0%, 100%, 0.15)',\n\n  BORDER: 'hsl(0, 0%, 90%)',\n  BORDER_HOVER: 'hsla(0, 0%, 100%, 0.15)',\n\n  TEXT_PRIMARY: 'hsl(0, 0%, 7%)',\n  TEXT_SECONDARY: 'hsl(0, 0%, 43%)',\n  TEXT_BUTTON: 'hsl(0, 0%, 100%)',\n\n  ICON_PRIMARY: 'hsl(0, 0%, 7%)',\n  ICON_SECONDARY: 'hsl(0, 0%, 63%)',\n\n  GREEN: 'hsl(126, 75%, 36%)',\n  YELLOW: 'hsl(40, 88%, 61%)',\n  RED: 'hsl(360, 90%, 61%)',\n};\n\nexport default blueLight;\n","import { THEME_COLOR_VIOLET, THEME_MODE_LIGHT } from 'app-constants';\nimport { IThemeType } from 'theme';\n\nconst violetLight: IThemeType = {\n  mode: THEME_MODE_LIGHT,\n  color: THEME_COLOR_VIOLET,\n\n  MAIN: 'hsl(274, 87%, 58%)',\n  MAIN_BORDER: 'hsl(274, 87%, 52%)',\n  MAIN_TRANSPARENT: 'hsla(274, 87%, 58%, 0.12)',\n  MAIN_ITEMS: 'hsl(0, 0%, 100%)',\n  MAIN_PATTERN: 'hsl(281, 62%, 92%)',\n\n  BG_PRIMARY: 'hsl(0, 0%, 100%)',\n  BG_SECONDARY: 'hsl(0, 0%, 96%)',\n  BG_NOTE: 'hsl(0, 0%, 100%)',\n  BG_BADGE: 'hsl(0, 0%, 90%)',\n  BG_HOVER: 'hsla(0, 0%, 100%, 0.15)',\n\n  BORDER: 'hsl(0, 0%, 90%)',\n  BORDER_HOVER: 'hsla(0, 0%, 100%, 0.15)',\n\n  TEXT_PRIMARY: 'hsl(0, 0%, 7%)',\n  TEXT_SECONDARY: 'hsl(0, 0%, 43%)',\n  TEXT_BUTTON: 'hsl(0, 0%, 100%)',\n\n  ICON_PRIMARY: 'hsl(0, 0%, 7%)',\n  ICON_SECONDARY: 'hsl(0, 0%, 63%)',\n\n  GREEN: 'hsl(126, 75%, 36%)',\n  YELLOW: 'hsl(40, 88%, 61%)',\n  RED: 'hsl(360, 90%, 61%)',\n};\n\nexport default violetLight;\n","import { THEME_COLOR_ORANGE, THEME_MODE_LIGHT } from 'app-constants';\nimport { IThemeType } from 'theme';\n\nconst orangeLight: IThemeType = {\n  mode: THEME_MODE_LIGHT,\n  color: THEME_COLOR_ORANGE,\n\n  MAIN: 'hsl(29, 83%, 51%)',\n  MAIN_BORDER: 'hsl(29, 77%, 46%)',\n  MAIN_TRANSPARENT: 'hsla(29, 83%, 51%, 0.12)',\n  MAIN_ITEMS: 'hsl(0, 0%, 100%)',\n  MAIN_PATTERN: 'hsl(29, 80%, 92%)',\n\n  BG_PRIMARY: 'hsl(0, 0%, 100%)',\n  BG_SECONDARY: 'hsl(0, 0%, 96%)',\n  BG_NOTE: 'hsl(0, 0%, 100%)',\n  BG_BADGE: 'hsl(0, 0%, 90%)',\n  BG_HOVER: 'hsla(0, 0%, 100%, 0.15)',\n\n  BORDER: 'hsl(0, 0%, 90%)',\n  BORDER_HOVER: 'hsla(0, 0%, 100%, 0.15)',\n\n  TEXT_PRIMARY: 'hsl(0, 0%, 7%)',\n  TEXT_SECONDARY: 'hsl(0, 0%, 43%)',\n  TEXT_BUTTON: 'hsl(0, 0%, 100%)',\n\n  ICON_PRIMARY: 'hsl(0, 0%, 7%)',\n  ICON_SECONDARY: 'hsl(0, 0%, 63%)',\n\n  GREEN: 'hsl(126, 75%, 36%)',\n  YELLOW: 'hsl(40, 88%, 61%)',\n  RED: 'hsl(360, 90%, 61%)',\n};\n\nexport default orangeLight;\n","import {\n  THEME_MODE_LIGHT,\n  THEME_MODE_DARK,\n  THEME_COLOR_BLUE,\n  THEME_COLOR_ORANGE,\n  THEME_COLOR_VIOLET,\n} from 'app-constants';\nimport blueDark from './dark/blueDark';\nimport violetDark from './dark/violetDark';\nimport orangeDark from './dark/orangeDark';\nimport blueLight from './light/blueLight';\nimport violetLight from './light/violetLight';\nimport orangeLight from './light/orangeLight';\n\nexport const appThemes = {\n  [THEME_MODE_LIGHT]: {\n    [THEME_COLOR_BLUE]: blueLight,\n    [THEME_COLOR_ORANGE]: orangeLight,\n    [THEME_COLOR_VIOLET]: violetLight,\n  },\n  [THEME_MODE_DARK]: {\n    [THEME_COLOR_BLUE]: blueDark,\n    [THEME_COLOR_ORANGE]: orangeDark,\n    [THEME_COLOR_VIOLET]: violetDark,\n  },\n};\n","import { ActionType } from 'state/action-types';\nimport { ISwitchThemeAction } from 'state/actions';\nimport { appThemes, IThemeType } from 'theme';\n\nconst initialState: IThemeType = appThemes.light.blue;\n\nconst themeReducer = (state = initialState, action: ISwitchThemeAction): IThemeType => {\n  switch (action.type) {\n    case ActionType.SWITCH_THEME:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;\n","import { combineReducers } from 'redux';\nimport themeReducer from 'state/reducers/themeReducer';\n\nconst reducers = combineReducers({\n  theme: themeReducer,\n});\n\nexport default reducers;\n\nexport type StateType = ReturnType<typeof reducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from 'state/reducers';\n\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\n","import { createGlobalStyle } from 'styled-components';\nimport { THEME_TRANSITION_TIME, THEME_TRANSITION_CLASS } from 'app-constants';\n\nconst GlobalStyle = createGlobalStyle`\n  html.${THEME_TRANSITION_CLASS},\n  html.${THEME_TRANSITION_CLASS} *,\n  html.${THEME_TRANSITION_CLASS} *:before,\n  html.${THEME_TRANSITION_CLASS} *:after {\n    transition: all ${THEME_TRANSITION_TIME}ms !important;\n    transition-delay: 0 !important;\n  }\n\n  *, *::before, *::after {\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  html {\n    height: 100%;\n    font-size: 62.5%;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    font-size: 1.6rem;\n    font-family: 'Montserrat', sans-serif;\n\n    * {\n      font-family: 'Montserrat', sans-serif;\n    }\n  }\n\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n    outline: none;\n  }\n\n  #root {\n    height: 100%;\n  }\n`;\n\nexport default GlobalStyle;\n","import { THEME_TRANSITION_TIME, THEME_TRANSITION_CLASS } from 'app-constants';\n\nexport const toggleTransitionClass = (): void => {\n  const htmlClassList = document.documentElement.classList;\n  htmlClassList.add(THEME_TRANSITION_CLASS);\n  setTimeout(() => htmlClassList.remove(THEME_TRANSITION_CLASS), THEME_TRANSITION_TIME);\n};\n","import React, { useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { actionCreators, StateType } from 'state';\nimport { useThemeDetector } from 'hooks';\nimport GlobalStyle from 'theme/GlobalStyle';\nimport { appThemes } from 'theme';\nimport { toggleTransitionClass } from 'helpers';\n\ninterface IProps extends RouteComponentProps {\n  children: JSX.Element;\n}\n\nconst MainTemplate = ({ children }: IProps) => {\n  const theme = useSelector((state: StateType) => state.theme);\n  const isSystemDarkTheme = useThemeDetector();\n  const dispatch = useDispatch();\n\n  const { switchTheme } = bindActionCreators(actionCreators, dispatch);\n\n  useEffect(() => {\n    const { light, dark } = appThemes;\n    const { color } = theme;\n\n    switchTheme(isSystemDarkTheme ? dark[color] : light[color]);\n    toggleTransitionClass();\n  }, [isSystemDarkTheme]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </>\n  );\n};\n\nexport default withRouter(MainTemplate);\n","import { useEffect, useState } from 'react';\n\nexport const useThemeDetector = (): boolean => {\n  const getCurrentTheme = () => window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n  const [isDarkTheme, setIsDarkTheme] = useState(getCurrentTheme());\n\n  const mqListener = (e: { matches: boolean | ((prevState: boolean) => boolean) }) =>\n    setIsDarkTheme(e.matches);\n\n  useEffect(() => {\n    const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\n    darkThemeMq.addEventListener('change', mqListener);\n  }, []);\n\n  return isDarkTheme;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionCreators, StateType } from 'state';\nimport { ThemeColorType, appThemes } from 'theme';\nimport { toggleTransitionClass } from 'helpers';\nimport {\n  THEME_COLOR_BLUE,\n  THEME_COLOR_VIOLET,\n  THEME_COLOR_ORANGE,\n  THEME_MODE_LIGHT,\n} from 'app-constants';\n\ninterface IColorButtonProps {\n  bgColor: string;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  background-color: ${({ theme }) => theme.BG_PRIMARY};\n`;\n\nconst Header = styled.h1`\n  font-size: 3.2rem;\n  color: ${({ theme }) => theme.MAIN};\n`;\n\nconst Button = styled.button`\n  height: 4rem;\n  border: 2px solid #a8a8a8;\n  border-radius: 2rem;\n  padding: 0 2rem;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  margin-top: 2rem;\n`;\n\nconst ColorButton = styled.button<IColorButtonProps>`\n  margin-right: 1rem;\n  width: 4rem;\n  height: 4rem;\n  background-color: ${({ bgColor }) => bgColor};\n  border: 2px solid #a8a8a8;\n  border-radius: 50%;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst HomePage = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const theme = useSelector((state: StateType) => state.theme);\n\n  const { switchTheme } = bindActionCreators(actionCreators, dispatch);\n\n  const toggleTheme = () => {\n    const { mode, color } = theme;\n\n    if (mode == THEME_MODE_LIGHT) switchTheme(appThemes.dark[color]);\n    else switchTheme(appThemes.light[color]);\n\n    toggleTransitionClass();\n  };\n\n  const changeThemeColor = (color: ThemeColorType) => {\n    const { mode } = theme;\n\n    switchTheme(appThemes[mode][color]);\n    toggleTransitionClass();\n  };\n\n  return (\n    <Container>\n      <Header>react-todo-app</Header>\n      <Button onClick={toggleTheme}>toggle theme</Button>\n      <ButtonsContainer>\n        <ColorButton\n          bgColor={appThemes[theme.mode][THEME_COLOR_BLUE].MAIN}\n          onClick={() => changeThemeColor(THEME_COLOR_BLUE)}\n        />\n        <ColorButton\n          bgColor={appThemes[theme.mode][THEME_COLOR_ORANGE].MAIN}\n          onClick={() => changeThemeColor(THEME_COLOR_ORANGE)}\n        />\n        <ColorButton\n          bgColor={appThemes[theme.mode][THEME_COLOR_VIOLET].MAIN}\n          onClick={() => changeThemeColor(THEME_COLOR_VIOLET)}\n        />\n      </ButtonsContainer>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { store } from 'state';\nimport MainTemplate from 'templates/MainTemplate';\nimport HomePage from 'views/HomePage';\n\nconst Root = (): JSX.Element => (\n  <>\n    <Helmet>\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;600&display=swap\"\n        rel=\"stylesheet\"\n      />\n    </Helmet>\n    <Provider store={store}>\n      <BrowserRouter>\n        <MainTemplate>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n          </Switch>\n        </MainTemplate>\n      </BrowserRouter>\n    </Provider>\n  </>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}